package boat

func Head[T any](array []T) *T {
	if len(array) == 0 {
		return nil
	}
	return &array[0]
}

func First[T any](array []T) *T {
	return Head(array)
}

func Last[T any](array []T) *T {
	if len(array) == 0 {
		return nil
	}
	return &array[len(array)-1]
}

func Reverse[T any](array []T) []T {
	reversed := make([]T, len(array))
	for i := range array {
		reversed[i] = array[len(array)-1-i]
	}
	return reversed
}
